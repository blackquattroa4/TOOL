@extends('layouts.app')

@section('content')
<div class="container">
	<div class="row">
		<div class="col-md-10 col-md-offset-1">
			<!-- transactable form modal -->
		@if ($controlSwitch['transactable-modal'])
			@include(prioritizeCustomizedTemplateOverDefault('embedded_modal.transactable_form'))
		@endif

			<!-- purchase-process form modal -->
		@if ($controlSwitch['purchase-process-modal'])
			@include(prioritizeCustomizedTemplateOverDefault('embedded_modal.purchase_process'))
		@endif

			<!-- sales-process form modal -->
		@if ($controlSwitch['sales-process-modal'])
			@include(prioritizeCustomizedTemplateOverDefault('embedded_modal.sales_process'))
		@endif

			<!-- taxable-entity modal -->
		@if ($controlSwitch['taxable-entity-modal'])
			@include(prioritizeCustomizedTemplateOverDefault('embedded_modal.taxable_entity'))
		@endif

			<!-- supplier-stats modal -->
		@if ($controlSwitch['supplier-stats-modal'])
			@include(prioritizeCustomizedTemplateOverDefault('embedded_modal.supplier_stats'))
		@endif

			<!-- customer-stats modal -->
		@if ($controlSwitch['customer-stats-modal'])
			@include(prioritizeCustomizedTemplateOverDefault('embedded_modal.customer_stats'))
		@endif

			<!-- taccount-transaction modal -->
		@if ($controlSwitch['taccount-transaction-modal'])
			@include(prioritizeCustomizedTemplateOverDefault('embedded_modal.taccount_transaction'))
		@endif

			<!-- taccount-reconciliation modal -->
		@if ($controlSwitch['taccount-reconciliation-modal'])
			@include(prioritizeCustomizedTemplateOverDefault('embedded_modal.taccount_reconciliation'))
		@endif

			<!-- charge-entry modal -->
		@if ($controlSwitch['charge-entry-modal'])
			@include(prioritizeCustomizedTemplateOverDefault('embedded_modal.charge_entry'))
		@endif

			<!-- income-receipt modal -->
		@if ($controlSwitch['income-receipt-modal'])
			@include(prioritizeCustomizedTemplateOverDefault('embedded_modal.income_form'))
		@endif

			<!-- payment-disbursement modal -->
		@if ($controlSwitch['payment-disbursement-modal'])
			@include(prioritizeCustomizedTemplateOverDefault('embedded_modal.payment_form'))
		@endif

			<!-- loan modal -->
		@if ($controlSwitch['loan-modal'])
			@include(prioritizeCustomizedTemplateOverDefault('embedded_modal.loan_form'))
		@endif

			<!-- transfer cash modal -->
		@if ($controlSwitch['transfer-cash-modal'])
			@include(prioritizeCustomizedTemplateOverDefault('embedded_modal.transfer_cash'))
		@endif

			<!-- interest/dividend modal -->
		@if ($controlSwitch['dividend-income-modal'])
			@include(prioritizeCustomizedTemplateOverDefault('embedded_modal.dividend_income'))
		@endif

			<!-- loan interest modal -->
		@if ($controlSwitch['loan-interest-modal'])
			@include(prioritizeCustomizedTemplateOverDefault('embedded_modal.loan_interest'))
		@endif

		@if ($controlSwitch['receivable-window'])
			<div id="receivablewindow" class="panel panel-default">
				<div class="panel-heading">
					<table width='100%'>
						<tr>
							<td><h4>{{ trans('finance.Receivable') }}</h4></td>
							<td align='right'>
							@if ($controlSwitch['sales-process-modal'])
								<input type="button" class="btn btn-primary" onclick="getProcessableOrder('sales', 'processable-salesorder-template', 'receivableModal')" value="{{ trans('finance.New receivable') }}"/>
							@endif
							</td>
						</tr>
					</table>
				</div>

				<div class="panel-body">
					<table id="receivabletable" class="table table-striped table-bordered" cellspacing="0" width="100%">
						<thead>
							<tr>
								<th>{{ trans('finance.Document') }}</th>
								<th>{{ trans('finance.Customer') }}</th>
								<th>{{ trans('finance.Incur date') }}</th>
								<th>{{ trans('finance.Due date') }}</th>
								<th>{{ trans('finance.Total') }}</th>
								<th>{{ trans('finance.Balance') }}</th>
								<th></th>
								<th></th>
							</tr>
						</thead>
						<tfoot>
							<tr>
								<th>{{ trans('finance.Document') }}</th>
								<th>{{ trans('finance.Customer') }}</th>
								<th>{{ trans('finance.Incur date') }}</th>
								<th>{{ trans('finance.Due date') }}</th>
								<th>{{ trans('finance.Total') }}</th>
								<th>{{ trans('finance.Balance') }}</th>
								<th></th>
								<th></th>
							</tr>
						</tfoot>
						<tbody>
							<!-- body generated by ajax; need an initial stuffer row  in order to get 'data-order' attribute active -->
							<tr>
								<td data-order="000000"></td>
								<td></td>
								<td data-order="1970-01-01"></td>
								<td data-order="1970-01-01"></td>
								<td></td>
								<td></td>
								<td></td>
								<td></td>
							</tr>
						</tbody>
					</table>
				</div>
			</div>
		@endif

		@if ($controlSwitch['customer-window'])
			<div id="customerwindow" class="panel panel-default">
				<div class="panel-heading">
					<table width='100%'>
						<tr>
							<td><h4>{{ trans('finance.Customer') }}</h4></td>
							<td align='right'>
							@if ($controlSwitch['create-customer-button'])
								<input type="button" class="btn btn-primary" onclick="createTaxableEntityInModal('customer')" value="{{ trans('finance.New customer') }}"/>
							@endif
							</td>
						</tr>
					</table>
				</div>

				<div class="panel-body">
					<table id="customertable" class="table table-striped table-bordered" cellspacing="0" width="100%">
						<thead>
							<tr>
								<th>{{ trans('finance.Name') }}</th>
								<th>{{ trans('finance.Code') }}</th>
								<th>{{ trans('finance.Contact') }}</th>
								<th>{{ trans('finance.Region') }}</th>
								<th>{{ trans('finance.Outstanding transactable') }}</th>
								<th></th>
								<th></th>
							</tr>
						</thead>
						<tfoot>
							<tr>
								<th>{{ trans('finance.Name') }}</th>
								<th>{{ trans('finance.Code') }}</th>
								<th>{{ trans('finance.Contact') }}</th>
								<th>{{ trans('finance.Region') }}</th>
								<th>{{ trans('finance.Outstanding transactable') }}</th>
								<th></th>
								<th></th>
							</tr>
						</tfoot>
						<tbody>
							<!-- body generated by ajax; need an initial stuffer row  in order to get 'data-order' attribute active -->
							<tr>
								<td></td>
								<td></td>
								<td></td>
								<td></td>
								<td></td>
								<td></td>
								<td></td>
							</tr>
						</tbody>
					</table>
				</div>
			</div>
		@endif

		@if ($controlSwitch['payable-window'])
			<div id="payablewindow" class="panel panel-default">
				<div class="panel-heading">
					<table width='100%'>
						<tr>
							<td><h4>{{ trans('finance.Payable') }}</h4></td>
							<td align='right'>
							@if ($controlSwitch['purchase-process-modal'])
								<input type="button" class="btn btn-primary" onclick="getProcessableOrder('purchase', 'processable-purchaseorder-template', 'payableModal')" value="{{ trans('finance.New payable') }}"/>
							@endif
							</td>
						</tr>
					</table>
				</div>

				<div class="panel-body">
					<table id="payabletable" class="table table-striped table-bordered" cellspacing="0" width="100%">
						<thead>
							<tr>
								<th>{{ trans('finance.Document') }}</th>
								<th>{{ trans('finance.Customer') }}</th>
								<th>{{ trans('finance.Incur date') }}</th>
								<th>{{ trans('finance.Due date') }}</th>
								<th>{{ trans('finance.Total') }}</th>
								<th>{{ trans('finance.Balance') }}</th>
								<th></th>
								<th></th>
							</tr>
						</thead>
						<tfoot>
							<tr>
								<th>{{ trans('finance.Document') }}</th>
								<th>{{ trans('finance.Customer') }}</th>
								<th>{{ trans('finance.Incur date') }}</th>
								<th>{{ trans('finance.Due date') }}</th>
								<th>{{ trans('finance.Total') }}</th>
								<th>{{ trans('finance.Balance') }}</th>
								<th></th>
								<th></th>
							</tr>
						</tfoot>
						<tbody>
							<!-- body generated by ajax; need an initial stuffer row  in order to get 'data-order' attribute active -->
							<tr>
								<td data-order="000000"></td>
								<td></td>
								<td data-order="1970-01-01"></td>
								<td data-order="1970-01-01"></td>
								<td></td>
								<td></td>
								<td></td>
								<td></td>
							</tr>
						</tbody>
					</table>
				</div>
			</div>
		@endif

		@if ($controlSwitch['supplier-window'])
			<div id="supplierwindow" class="panel panel-default">
				<div class="panel-heading">
					<table width='100%'>
						<tr>
							<td><h4>{{ trans('finance.Supplier') }}/{{ trans('hr.Staff') }}</h4></td>
							<td align='right'>
							@if ($controlSwitch['create-supplier-button'])
								<input type="button" class="btn btn-primary" onclick="createTaxableEntityInModal('supplier')" value="{{ trans('finance.New supplier') }}"/>
							@endif
							</td>
						</tr>
					</table>
				</div>

				<div class="panel-body">
					<table id="suppliertable" class="table table-striped table-bordered" cellspacing="0" width="100%">
						<thead>
							<tr>
								<th>{{ trans('finance.Name') }}</th>
								<th>{{ trans('finance.Code') }}</th>
								<th>{{ trans('finance.Contact') }}</th>
								<th>{{ trans('finance.Region') }}</th>
								<th>{{ trans('finance.Outstanding transactable') }}</th>
								<th></th>
								<th></th>
							</tr>
						</thead>
						<tfoot>
							<tr>
								<th>{{ trans('finance.Name') }}</th>
								<th>{{ trans('finance.Code') }}</th>
								<th>{{ trans('finance.Contact') }}</th>
								<th>{{ trans('finance.Region') }}</th>
								<th>{{ trans('finance.Outstanding transactable') }}</th>
								<th></th>
								<th></th>
							</tr>
						</tfoot>
						<tbody>
							<!-- body generated by ajax; need an initial stuffer row  in order to get 'data-order' attribute active -->
							<tr>
								<td></td>
								<td></td>
								<td></td>
								<td></td>
								<td></td>
								<td></td>
								<td></td>
							</tr>
						</tbody>
					</table>
				</div>
			</div>
		@endif

		@if ($controlSwitch['expense-window'])
			<div id="chargewindow" class="panel panel-default">
				<div class="panel-heading">
					<table width='100%'>
						<tr>
							<td><h4>{{ trans('finance.Charge') }}</h4></td>
							<td align='right'>
							@if ($controlSwitch['create-expense-button'])
								<input type="button" class="btn btn-primary" onclick="createChargeEntryInModal()" value="{{ trans('finance.New charge') }}"/>
							@endif
							</td>
						</tr>
					</table>
				</div>

				<div class="panel-body">
					<table id="chargetable" class="table table-striped table-bordered" cellspacing="0" width="100%">
						<thead>
							<tr>
								<th>{{ trans('finance.Date') }}</th>
								<th>{{ trans('finance.Title') }}</th>
								<th>{{ trans('finance.Entity') }}</th>
								<th>{{ trans('finance.Total') }}</th>
								<th>{{ trans('finance.Status') }}</th>
								<th></th>
								<th></th>
							</tr>
						</thead>
						<tfoot>
							<tr>
								<th>{{ trans('finance.Date') }}</th>
								<th>{{ trans('finance.Title') }}</th>
								<th>{{ trans('finance.Entity') }}</th>
								<th>{{ trans('finance.Total') }}</th>
								<th>{{ trans('finance.Status') }}</th>
								<th></th>
								<th></th>
							</tr>
						</tfoot>
						<tbody>
							<!-- body generated by ajax -->
							<tr>
								<td data-order="1970-01-01"></td>
								<td></td>
								<td></td>
								<td></td>
								<td></td>
								<td></td>
								<td></td>
							</tr>
						</tbody>
					</table>
				</div>
			</div>
		@endif

		@if ($controlSwitch['recurring-expense-window'])
			<div id="recurringwindow" class="panel panel-default">
				<div class="panel-heading">
					<table width='100%'>
						<tr>
							<td><h4>{{ trans('finance.Recurring charge') }}</h4></td>
							<td align='right'>
							@if ($controlSwitch['create-expense-button'])
								<input type="button" class="btn btn-primary" onclick="window.location.href='/charge/manage-recurring'" value="{{ trans('forms.Manage recurring charge') }}"/>
							@endif
							</td>
						</tr>
					</table>
				</div>

				<div class="panel-body">
					<table id="recurringtable" class="table table-striped table-bordered" cellspacing="0" width="100%">
						<thead>
							<tr>
								<th>{{ trans('finance.Entity') }}</th>
								<th>{{ trans('finance.Summary') }}</th>
								<th>{{ trans('finance.Last entered') }}</th>
								<th>{{ trans('finance.Last amount') }}</th>
								<th>{{ trans('finance.Frequency') }}</th>
								<th>{{ trans('finance.Upcoming') }}</th>
								<th></th>
							</tr>
						</thead>
						<tfoot>
							<tr>
								<th>{{ trans('finance.Entity') }}</th>
								<th>{{ trans('finance.Summary') }}</th>
								<th>{{ trans('finance.Last entered') }}</th>
								<th>{{ trans('finance.Last amount') }}</th>
								<th>{{ trans('finance.Frequency') }}</th>
								<th>{{ trans('finance.Upcoming') }}</th>
								<th></th>
							</tr>
						</tfoot>
						<tbody>
							<!-- body generated by ajax; need an initial stuffer row  in order to get 'data-order' attribute active -->
							<tr>
								<td></td>
								<td></td>
								<td data-order="1970-01-01"></td>
								<td></td>
								<td></td>
								<td data-order="1970-01-01" ></td>
								<td>
								</td>
							</tr>
						</tbody>
					</table>
				</div>
			</div>
		@endif

		@if ($controlSwitch['bank-account-window'])
			<div id="accountwindow" class="panel panel-default">
				<div class="panel-heading has-bank-accounts">
					<table width='100%'>
						<tr>
							<td><h4>{{ trans('finance.Bank account') }}</h4></td>
							<td align='right'>
								@if ($controlSwitch['transfer-cash-button'])
									<input v-if="account_id.length > 1" type="button" class="btn btn-primary" onclick="openTransferCashModal()" value="{{ trans('finance.Transfer cash') }}"/>
								@endif
							</td>
						</tr>
					</table>
				</div>

				<div class="panel-body">
					<table id="accounttable" class="table table-striped table-bordered" cellspacing="0" width="100%">
						<thead>
							<tr>
								<th>{{ trans('finance.Account') }}</th>
								<th>{{ trans('finance.Currency') }}</th>
								<th>{{ trans('finance.Balance') }}</th>
								<th>{{ trans('finance.Unreconciled debit') }}</th>
								<th>{{ trans('finance.Unreconciled credit') }}</th>
								<th></th>
							</tr>
						</thead>
						<tfoot>
							<tr>
								<th>{{ trans('finance.Account') }}</th>
								<th>{{ trans('finance.Currency') }}</th>
								<th>{{ trans('finance.Balance') }}</th>
								<th>{{ trans('finance.Unreconciled debit') }}</th>
								<th>{{ trans('finance.Unreconciled credit') }}</th>
								<th></th>
							</tr>
						</tfoot>
						<tbody>
							<!-- body generated by ajax; need an initial stuffer row  in order to get 'data-order' attribute active -->
							<tr>
								<td></td>
								<td></td>
								<td></td>
								<td></td>
								<td></td>
								<td></td>
							</tr>
						</tbody>
					</table>
				</div>
			</div>
		@endif

		@if ($controlSwitch['loan-window'])
			<div id="loanwindow" class="panel panel-default">
				<div class="panel-heading">
					<table width='100%'>
						<tr>
							<td><h4>{{ trans('finance.Loan') }}</h4></td>
							<td align='right'>
								@if ($controlSwitch['create-loan-button'])
									<button class="btn btn-primary" onclick="createLoanInModal()">{{ trans('finance.New loan') }}</button>
								@endif
							</td>
						</tr>
					</table>
				</div>

				<div class="panel-body">
					<table id="loantable" class="table table-striped table-bordered" cellspacing="0" width="100%">
						<thead>
							<tr>
								<th>{{ trans('finance.Loan title') }}</th>
								<th>{{ trans('forms.Entity') }}</th>
								<th>{{ trans('finance.Principal') }}</th>
								<th>{{ trans('finance.APR') }}</th>
								<th>{{ trans('finance.Balance') }}</th>
								<th></th>
								<th></th>
							</tr>
						</thead>
						<tfoot>
							<tr>
								<th>{{ trans('finance.Loan title') }}</th>
								<th>{{ trans('forms.Entity') }}</th>
								<th>{{ trans('finance.Principal') }}</th>
								<th>{{ trans('finance.APR') }}</th>
								<th>{{ trans('finance.Balance') }}</th>
								<th></th>
								<th></th>
							</tr>
						</tfoot>
						<tbody>
							<!-- body generated by ajax; need an initial stuffer row  in order to get 'data-order' attribute active -->
							<tr>
								<td></td>
								<td></td>
								<td></td>
								<td></td>
								<td></td>
								<td></td>
								<td></td>
							</tr>
						</tbody>
					</table>
				</div>
			</div>
		@endif

		@if ($controlSwitch['report-window'])
			<div id="reportwindow" class="panel panel-default">
				<div class="panel-heading"><h4>{{ trans('messages.Report') }}</h4></div>

				<div class="panel-body">
				@if ($controlSwitch['finance-report'])
					<a href="{{ url('finance/statement') }}" class="btn btn-sq-lg btn-info"><span class="fa fa-2x fa-file-text-o"></span><br/>{!! str_replace(" ", "<br/>", trans("finance.Financial statement")) !!}</a>
					<a href="{{ url('finance/inventory') }}" class="btn btn-sq-lg btn-info"><span class="fa fa-2x fa-file-text-o"></span><br/>{!! str_replace(" ", "<br/>", trans("finance.Inventory Report")) !!}</a>
				@endif
				@if ($controlSwitch['ap-report'])
					<a href="{{ url('finance/outstanding/payable') }}" class="btn btn-sq-lg btn-info"><span class="fa fa-2x fa-file-text-o"></span><br/>{!! str_replace(" ", "<br/>", trans("finance.Outstanding A/P")) !!}</a>
				@endif
				@if ($controlSwitch['ar-report'])
					<a href="{{ url('finance/outstanding/receivable') }}" class="btn btn-sq-lg btn-info"><span class="fa fa-2x fa-file-text-o"></span><br/>{!! str_replace(" ", "<br/>", trans("finance.Outstanding A/R")) !!}</a>
				@endif
				</div>
			</div>
		@endif

		@if ($controlSwitch['tool-window'])
			<div id="toolwindow" class="panel panel-default">
				<div class="panel-heading"><h4>{{ trans('messages.Tool') }}</h4></div>

				<div class="panel-body">
				@if ($controlSwitch['adjust-inventory-button'])
					<a href="{{ url('finance/adjust-inventory') }}" class="btn btn-sq-lg btn-info"><span class="fa fa-2x fa-cube"></span><br/>{!! str_replace(" ", "<br/>", trans("forms.Adjust inventory")) !!}</a>
				@endif
				@if ($controlSwitch['create-expense-button'])
					<a href="{{ url('commission/wizard') }}" class="btn btn-sq-lg btn-info"><span class="fa fa-2x fa-dollar"></span><br/>{!! str_replace(" ", "<br/>", trans("forms.Calculate commission")) !!}</a>
				@endif
				</div>
			</div>
		@endif

		</div>
	</div>
</div>

<ul id="contextMenu" class="dropdown-menu" role="menu" style="display:none" >
	<li style="text-align:center;"><b>{{ trans('messages.Quick scroll menu') }}</b></li>
	<li class="divider"></li>
@if ($controlSwitch['receivable-window'])
	<li><a tabindex="-1" onclick="$('html,body').animate({scrollTop:$('#receivablewindow').offset().top}, 500);">{{ trans('finance.Receivable') }}</a></li>
@endif
@if ($controlSwitch['customer-window'])
	<li><a tabindex="-1" onclick="$('html,body').animate({scrollTop:$('#customerwindow').offset().top}, 500);">{{ trans('finance.Customer') }}</a></li>
@endif
@if ($controlSwitch['payable-window'])
	<li><a tabindex="-1" onclick="$('html,body').animate({scrollTop:$('#payablewindow').offset().top}, 500);">{{ trans('finance.Payable') }}</a></li>
@endif
@if ($controlSwitch['supplier-window'])
	<li><a tabindex="-1" onclick="$('html,body').animate({scrollTop:$('#supplierwindow').offset().top}, 500);">{{ trans('finance.Supplier') }}</a></li>
@endif
@if ($controlSwitch['expense-window'])
	<li><a tabindex="-1" onclick="$('html,body').animate({scrollTop:$('#chargewindow').offset().top}, 500);">{{ trans('finance.Charge') }}</a></li>
@endif
@if ($controlSwitch['recurring-expense-window'])
	<li><a tabindex="-1" onclick="$('html,body').animate({scrollTop:$('#recurringwindow').offset().top}, 500);">{{ trans('finance.Recurring charge') }}</a></li>
@endif
@if ($controlSwitch['bank-account-window'])
	<li><a tabindex="-1" onclick="$('html,body').animate({scrollTop:$('#accountwindow').offset().top}, 500);">{{ trans('finance.Bank account') }}</a></li>
@endif
@if ($controlSwitch['loan-window'])
	<li><a tabindex="-1" onclick="$('html,body').animate({scrollTop:$('#loanwindow').offset().top}, 500);">{{ trans('finance.Loan') }}</a></li>
@endif
@if ($controlSwitch['report-window'])
	<li><a tabindex="-1" onclick="$('html,body').animate({scrollTop:$('#reportwindow').offset().top}, 500);">{{ trans('messages.Report') }}</a></li>
@endif
@if ($controlSwitch['tool-window'])
	<li><a tabindex="-1" onclick="$('html,body').animate({scrollTop:$('#toolwindow').offset().top}, 500);">{{ trans('messages.Tool') }}</a></li>
@endif
	<li><a tabindex="-1" onclick="$('html,body').animate({scrollTop:$('.container').offset().top}, 500);">{{ trans('messages.Return to top') }}<i style="padding-left:1em;" class="fa fa-arrow-up" aria-hidden="true"></i></a></li>
</ul>
@endsection

@section('post-content')

@if (!App::environment('local'))
	<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.min.js" charset="utf-8"></script>
@else
	<script type="text/javascript" src="{{ asset('external/ajax/libs/Chart.js/2.7.1/Chart.min.js') }}"></script>
@endif

	<script type="text/javascript" src="{{ asset('js/ContextMenu.js') }}"></script>

	<script type="text/javascript">

		$(".container").contextMenu({
			menuSelector: "#contextMenu",
			/*
			menuSelected: function (invokedOn, selectedMenu) {
				var msg = "You selected the menu item '" + selectedMenu.text() + "' on the value '" + invokedOn.text() + "'";
				alert(msg);
			}
			*/
		});
	</script>

	<script type="text/javascript" src="{{ asset('js/DataTableHelper.js') }}" ></script>

	<script type="text/javascript" src="{{ asset('js/HtmlTemplateHelper.js') }}" ></script>

	<script src="{{ asset('external/imagebox/js/jquery.imagemodal.js') }}"></script>

@if ($controlSwitch['sales-process-modal'])
	<script id="processable-salesorder-template" type="text/x-custom-template">
		<li>
			<span data-condition="'{type}' == 'order'">
				<a onclick="$('#receivableModal').modal('hide'); processSalesProcessInModal({id});">#{increment}</a>
				<span style="padding-left:30px;">{customer}</span>
				<span style="padding-left:20px;">{balance}</span>
			</span>
			<span data-condition="'{type}' != 'order'">
				<a onclick="$('#receivableModal').modal('hide'); processSalesProcessInModal({id});">#R{increment}</a>
				<span style="padding-left:30px;">{customer}</span>
				<span style="padding-left:20px;">{balance}</span>
			</span>
		</li>
	</script>
@endif

@if ($controlSwitch['purchase-process-modal'])
	<script id="processable-purchaseorder-template" type="text/x-custom-template">
		<li>
			<span data-condition="'{type}' == 'order'">
				<a onclick="$('#payableModal').modal('hide'); processPurchaseProcessInModal({id});">#{title}</a>
				<span style="padding-left:30px;">{supplier}</span>
				<span style="padding-left:20px;">{balance}</span>
			</span>
			<span data-condition="'{type}' != 'order'">
				<a onclick="$('#receivableModal').modal('hide'); processPurchaseProcessInModal({id});">#R{title}</a>
				<span style="padding-left:30px;">{supplier}</span>
				<span style="padding-left:20px;">{balance}</span>
			</span>
		</li>
	</script>
@endif

@if ($controlSwitch['entity-template'])
	<script id="entity-table-template" type="text/x-custom-template">
		<tr id="entity-{id}">
			<td>
				<p style="padding-right:2em;display:inline;">{name}</p>
				<i data-condition="{is_active}" class="fa fa-heartbeat" aria-hidden="true" title="{{ trans('status.Active') }}"></i>
			</td>
			<td>{code}</td>
			<td>{contact}</td>
			<td>{region}</td>
			<td class="text-right">{outstanding_transactable}</td>
			<td>{search-key}</td>
			<td style="width:110px">
				<button data-condition="{can_view}" class='btn btn-info btn-xs' title="{{ trans('forms.View') }}" onclick="viewTaxableEntityInModal({id})">
					<i class="fa fa-eye" aria-hidden="true"></i>
				</button>
				<button data-condition="{can_edit}" class='btn btn-info btn-xs' title="{{ trans('forms.Edit') }}" onclick="updateTaxableEntityInModal({id})">
					<i class="fa fa-pencil-square-o" aria-hidden="true"></i>
				</button>
				<button data-condition="{can_view} &amp;&amp; ('{type}' == 'customer')" class='btn btn-info btn-xs' title="{{ trans('forms.View') }}" onclick="loadCustomerStats({id})">
					<i class="fa fa-line-chart" aria-hidden="true"></i>
				</button>
				<button data-condition="{can_view} &amp;&amp; ('{type}' == 'supplier')" class='btn btn-info btn-xs' title="{{ trans('forms.View') }}" onclick="loadSupplierStats({id})">
					<i class="fa fa-line-chart" aria-hidden="true"></i>
				</button>
				<button data-condition="{can_transact} &amp;&amp; ('{type}' == 'customer')" class='btn btn-info btn-xs' title="{{ trans('forms.Receive payment') }}" onclick="payReceivableInModal({id})">
					<i style="padding-left:3px;padding-right:3px;" class="fa fa-usd" aria-hidden="true"></i>
				</button>
				<button data-condition="{can_transact} &amp;&amp; ('{type}' != 'customer')" class='btn btn-info btn-xs' title="{{ trans('forms.Issue payment') }}" onclick="payPayableInModal({id})">
					<i style="padding-left:3px;padding-right:3px;" class="fa fa-usd" aria-hidden="true"></i>
				</button>
			</td>
		</tr>
	</script>
@endif

@if ($controlSwitch['transactable-template'])
	<script id="transactable-table-template" type="text/x-custom-template">
		<tr id="transactable-{id}">
			<td data-order="{title_numeral}"><p style="padding-right:2em;display:inline;">{title}</p>
				<i data-condition="{is_closed}" class="fa fa-times" aria-hidden="true" title="{{ trans('status.Closed') }}"></i>
				<i data-condition="{is_void}" class="fa fa-ban" aria-hidden="true" title="{{ trans('status.Void') }}"></i>
			</td>
			<td>{entity}</td>
			<td data-order="{incur_date}">{incur_date_display}</td>
			<td data-condition="{is_pastdue}" data-order="{due_date}" class="text-danger">{due_date_display}</td>
			<td data-condition="!{is_pastdue}" data-order="{due_date}" >{due_date_display}</td>
			<td class="text-right">{total}</td>
			<td data-condition="{is_pastdue}" class="text-right text-danger">{balance}</td>
			<td data-condition="!{is_pastdue}" class="text-right">{balance}</td>
			<td>{search-key}</td>
			<td style="width:55px">
				<button data-condition="{can_view}" class='btn btn-info btn-xs' title="{{ trans('forms.View') }}" onclick="viewTransactableEntryInModal({id})"><i class="fa fa-eye" aria-hidden="true"></i></button>
				<button data-condition="{can_void}" class='btn btn-info btn-xs' title="{{ trans('forms.Void') }}" onclick="voidTransactableEntryInModal({id})"><i class="fa fa-ban" aria-hidden="true"></i></button>
			</td>
		</tr>
	</script>
@endif

@if ($controlSwitch['expense-template'])
	<script id="expense-table-template" type="text/x-custom-template">
		<tr id="charge-{id}">
			<td data-order="{incur_date}"><p style="padding-right:2em;display:inline;">{incur_date_display}</p>
				<i data-condition="{is_valid}" class="fa fa-check-circle" aria-hidden="true" title="{{ trans('status.Valid') }}"></i>
				<i data-condition="{is_approved}" class="fa fa-check-square-o" aria-hidden="true" title="{{ trans('status.Approved') }}"></i>
			</td>
			<td>{title}</td>
			<td>{entity}</td>
			<td class="text-right">{total}</td>
			<td>{status}</td>
			<td>{search-key}</td>
			<td style="width:82px">
				<button data-condition="{can_view}" class='btn btn-info btn-xs' title="{{ trans('forms.View') }}" onclick="viewChargeEntryInModal({id})"><i class="fa fa-eye" aria-hidden="true"></i></button>
				<button data-condition="{can_submit}" class='btn btn-info btn-xs' title="{{ trans('forms.Submit') }}" onclick="submitChargeEntryInModal({id})"><i class="fa fa-file-text" aria-hidden="true"></i></button>
				<button data-condition="{can_retract}" class='btn btn-info btn-xs' title="{{ trans('forms.Retract') }}" onclick="retractChargeEntryInModal({id})"><i class="fa fa-times" aria-hidden="true"></i></button>
				<button data-condition="{can_approve}" class='btn btn-info btn-xs' title="{{ trans('forms.Approve') }}" onclick="approveChargeEntryInModal({id})"><i class="fa fa-check-square-o" aria-hidden="true"></i></button>
			</td>
		</tr>
	</script>
@endif

@if ($controlSwitch['recurring-expense-template'])
	<script id="recurring-table-template" type="text/x-custom-template">
		<tr id="recurring-{id}">
			<td>{entity}</td>
			<td>{notes}</td>
			<td data-order="{last_entered_on}">{last_entered_on_display}</td>
			<td>{last_entered_amount}</td>
			<td>{frequency_display}</td>
			<td data-condition="{pastdue}" data-order="{upcoming}" class="text-danger" >{upcoming_display}</td>
			<td data-condition="!{pastdue}" data-order="{upcoming}"  >{upcoming_display}</td>
			<td style="width:28px">
				<button data-condition="{can_create}" class='btn btn-info btn-xs' title="{{ trans('forms.Record') }}" onclick="createChargeEntryFromRecurringInModal({id})">
					<i class="fa fa-pencil-square-o" aria-hidden="true"></i>
				</button>
			</td>
		</tr>
	</script>
@endif

@if ($controlSwitch['bank-account-template'])
	<script id="account-table-template" type="text/x-custom-template">
		<tr id="taccount-{id}">
			<td>{description}</td>
			<td>{currency}</td>
			<td style="text-align:right;">{balance}</td>
			<td id="bank-account-{id}-debit" style="text-align:right;">{debit}</td>
			<td id="bank-account-{id}-credit" style="text-align:right;">{credit}</td>
			<td style="width:82px">
				<button data-condition="{can_view}" id="bank-account-{id}-view" class='btn btn-info btn-xs' title="{{ trans('forms.View') }}" onclick="viewTaccountTransactionInModal({id}, '{description}', '{currency}')"><i class="fa fa-eye" aria-hidden="true"></i></button>
				<button data-condition="{can_reconcile}" id="bank-account-{id}-reconcile" class='btn btn-info btn-xs' title="{{ trans('forms.Reconcile') }}" onclick="processTaccountReconciliationInModal({id})"><i class="fa fa-link" aria-hidden="true"></i></button>
				<button data-condition="{can_ar_process}" class='btn btn-info btn-xs' title="{{ trans('finance.Record interest/dividend') }}" onclick="openDividendIncomeModal({id})"><i class="fa fa-gift" aria-hidden="true"></i></button>
			</td>
		</tr>
	</script>
@endif

@if ($controlSwitch['loan-template'])
	<script id="loan-table-template" type="text/x-custom-template">
		<tr id="loan-{id}">
			<td>
				<p style="padding-right:2em;display:inline;">{title}</p>
				<i data-condition="{bad_debt}" class="fa fa-bomb" aria-hidden="true" title="{{ trans('status.Bad debt') }}"></i>
				<i data-condition="'{status}' == 'closed'" class="fa fa-archive" aria-hidden="true" title="{{ trans('status.Closed') }}"></i>
			</td>
			<td>{entity}</td>
			<td style="text-align:right;">{principal}</td>
			<td style="text-align:right;">{apr}</td>
			<td id="loan-balance-{id}" name="loan-balance-{id}" style="text-align:right;">{balance}</td>
			<td>{search-key}</td>
			<td style="width:110px">
				<button data-condition="{can_view}" class='btn btn-info btn-xs' title="{{ trans('forms.View') }}" onclick="viewLoanInModal({id})"><i class="fa fa-eye" aria-hidden="true"></i></button>
				<button data-condition="{can_edit}" class='btn btn-info btn-xs' title="{{ trans('forms.Update') }}" onclick="updateLoanInModal({id})"><i class="fa fa-pencil-square-o" aria-hidden="true"></i></button>
				<button data-condition="{can_process} &amp;&amp; ('{role}' == 'lender')" class='btn btn-info btn-xs' title="{{ trans('finance.Record interest') }}" onclick="openLoanInterestModal({id}, true)"><i class="fa fa-money" aria-hidden="true"></i></button>
				<button data-condition="{can_process} &amp;&amp; ('{role}' != 'lender')" class='btn btn-info btn-xs' title="{{ trans('finance.Record interest') }}" onclick="openLoanInterestModal({id}, false)"><i class="fa fa-money" aria-hidden="true"></i></button>
				<button data-condition="{can_be_bad_debt}" class='btn btn-info btn-xs' title="{{ trans('finance.Bad debt') }}" onclick="forgiveLoanInModal({id})"><i class="fa fa-bomb" aria-hidden="true"></i></button>
			</td>
		</tr>
	</script>
@endif

@if ($controlSwitch['receivable-window'])
	<script>
		$(document).ready(function() {
			$('#receivabletable').DataTable(Object.assign(
				dataTableDefaultConfig('{{ trans('forms.Refresh/Reload') }}', 'GET', '/dashboard/transactable/receivable/ajax', { }, '#receivabletable', '#transactable-table-template', '{{ trans('tool.Enter search keyword') }}', '{{ \App\TransactableHeader::generateSearchTips("\\n") }}', {{ env('DATATABLE_DEFAULT_ROWS', 10) }}),
				{
					order : [[ 2, 'desc' ]],
					columnDefs : [{ orderable : false, targets : 7 }, { visible : false, targets : 6 }]
				}
			)).on('preXhr.dt', function(e, settings) {
				showDataTableProcessingTransient('#receivabletable');
			});
		} );
	</script>
@endif

@if ($controlSwitch['customer-window'])
	<script>
		$(document).ready(function() {
			$('#customertable').DataTable(Object.assign(
				dataTableDefaultConfig('{{ trans('forms.Refresh/Reload') }}', 'GET', '/dashboard/entity/customer/ajax', { }, '#customertable', '#entity-table-template', '{{ trans('tool.Enter search keyword') }}', '{{ \App\TaxableEntity::generateSearchTips("\\n") }}', {{ env('DATATABLE_DEFAULT_ROWS', 10) }}),
				{
					order : [[ 0, 'desc' ]],
					columnDefs : [{ orderable : false, targets : 6 }, { visible : false, targets : 5 }]
				}
			)).on('preXhr.dt', function(e, settings) {
				showDataTableProcessingTransient('#customertable');
			});
		} );
	</script>
@endif

@if ($controlSwitch['payable-window'])
	<script>
		$(document).ready(function() {
			$('#payabletable').DataTable(Object.assign(
				dataTableDefaultConfig('{{ trans('forms.Refresh/Reload') }}', 'GET', '/dashboard/transactable/payable/ajax', { }, '#payabletable', '#transactable-table-template', '{{ trans('tool.Enter search keyword') }}', '{{ \App\TransactableHeader::generateSearchTips("\\n") }}', {{ env('DATATABLE_DEFAULT_ROWS', 10) }}),
				{
					order : [[ 2, 'desc' ]],
					columnDefs : [{ orderable: false, targets: 7 }, { visible: false, targets: 6 }]
				}
			)).on('preXhr.dt', function(e, settings) {
				showDataTableProcessingTransient('#payabletable');
			});
		} );
	</script>
@endif

@if ($controlSwitch['supplier-window'])
	<script>
		$(document).ready(function() {
			$('#suppliertable').DataTable(Object.assign(
				dataTableDefaultConfig('{{ trans('forms.Refresh/Reload') }}', 'GET', '/dashboard/entity/supplier-employee/ajax', { }, '#suppliertable', '#entity-table-template', '{{ trans('tool.Enter search keyword') }}', '{{ \App\TaxableEntity::generateSearchTips("\\n") }}', {{ env('DATATABLE_DEFAULT_ROWS', 10) }}),
				{
					order : [[ 0, 'desc' ]],
					columnDefs : [{ orderable: false, targets: 6 }, { visible: false, targets: 5 }]
				}
			)).on('preXhr.dt', function(e, settings) {
				showDataTableProcessingTransient('#suppliertable');
			});
		} );
	</script>
@endif

@if ($controlSwitch['expense-window'])
	<script>
		$(document).ready(function() {
			$('#chargetable').DataTable(Object.assign(
				dataTableDefaultConfig('{{ trans('forms.Refresh/Reload') }}', 'GET', '/dashboard/expense/all/ajax', { }, '#chargetable', '#expense-table-template', '{{ trans('tool.Enter search keyword') }}', '{{ \App\ExpenseHeader::generateSearchTips("\\n") }}', {{ env('DATATABLE_DEFAULT_ROWS', 10) }}),
				{
					order : [[ 0, 'desc' ]],
					columnDefs : [{ orderable: false, targets: 6 }, { visible: false, targets: 5 }]
				}
			)).on('preXhr.dt', function(e, settings) {
				showDataTableProcessingTransient('#chargetable');
			});
		} );
	</script>
@endif

@if ($controlSwitch['recurring-expense-window'])
	<script>
		$(document).ready(function() {
			$('#recurringtable').DataTable(Object.assign(
				dataTableDefaultConfig('{{ trans('forms.Refresh/Reload') }}', 'GET', '/dashboard/recurring-expense/ajax', { }, '#recurringtable', '#recurring-table-template', '{{ trans('tool.Enter search keyword') }}', '', {{ env('DATATABLE_DEFAULT_ROWS', 10) }}),
				{
					order : [[ 5, 'asc' ]],
					columnDefs : [{ orderable: false, targets: 6 }]
				}
			)).on('preXhr.dt', function(e, settings) {
				showDataTableProcessingTransient('#recurringtable');
			});
		} );
	</script>
@endif

@if ($controlSwitch['bank-account-window'])
	<script>
		$(document).ready(function() {
			$('#accounttable').DataTable(Object.assign(
				dataTableDefaultConfig('{{ trans('forms.Refresh/Reload') }}', 'GET', '/dashboard/account/bank/ajax', { }, '#accounttable', '#account-table-template', '{{ trans('tool.Enter search keyword') }}', '', {{ env('DATATABLE_DEFAULT_ROWS', 10) }}),
				{
					order : [[ 0, 'asc' ]],
					columnDefs : [{ orderable: false, targets: 5 }]
				}
			)).on('preXhr.dt', function(e, settings) {
				showDataTableProcessingTransient('#accounttable');
			});
		} );
	</script>
@endif

@if ($controlSwitch['loan-window'])
	<script>
		$(document).ready(function() {
			$('#loantable').DataTable(Object.assign(
				dataTableDefaultConfig('{{ trans('forms.Refresh/Reload') }}', 'GET', '/dashboard/loan/ajax', { }, '#loantable', '#loan-table-template', '{{ trans('tool.Enter search keyword') }}', '{{ \App\LoanHeader::generateSearchTips("\\n") }}', {{ env('DATATABLE_DEFAULT_ROWS', 10) }}),
				{
					order : [[ 0, 'desc' ]],
					columnDefs : [{ orderable: false, targets: 6 }, { visible: false, targets: 5 }]
				}
			)).on('preXhr.dt', function(e, settings) {
				showDataTableProcessingTransient('#loantable');
			});
		} );
	</script>
@endif

@if ($controlSwitch['transactable-template'])
	<script>
		function refreshTableWithTransactable(trx, is_new) {
			let content = populateHtmlTemplateWithData($("#transactable-table-template").html().toString(), trx);
			switch (trx['type']) {
				case 'receivable':
					if (!is_new && $('#receivabletable').DataTable().row('#transactable-' + trx['id']).length) {
						$('#receivabletable').DataTable().row('#transactable-' + trx['id']).remove();
					}
					$('#receivabletable').DataTable().row.add($(content)).draw();
					break;
				case 'payable':
					if (!is_new && $('#payabletable').DataTable().row('#transactable-' + trx['id']).length) {
						$('#payabletable').DataTable().row('#transactable-' + trx['id']).remove();
					}
					$('#payabletable').DataTable().row.add($(content)).draw();
					break;
				default:
					break;
			}
		}
	</script>
@endif

@if ($controlSwitch['entity-template'])
	<script>
		function refreshTableWithEntity(entity, is_new) {
			let content = populateHtmlTemplateWithData($("#entity-table-template").html().toString(), entity);
			switch (entity['type']) {
				case 'customer':
					if (!is_new && $('#customertable').DataTable().row('#entity-' + entity['id']).length) {
						$('#customertable').DataTable().row('#entity-' + entity['id']).remove();
					}
					$('#customertable').DataTable().row.add($(content)).draw();
					break;
				default:
					if (!is_new && $('#suppliertable').DataTable().row('#entity-' + entity['id']).length) {
						$('#suppliertable').DataTable().row('#entity-' + entity['id']).remove();
					}
					$('#suppliertable').DataTable().row.add($(content)).draw();
					break;
			}
		}
	</script>
@endif

@if ($controlSwitch['bank-account-template'])
	<script>
		function refreshTableWithTaccount(taccount, is_new) {
			let content = populateHtmlTemplateWithData($("#account-table-template").html().toString(), taccount);
			if (!is_new && $('#accounttable').DataTable().row('#taccount-' + taccount['id']).length) {
				$('#accounttable').DataTable().row('#taccount-' + taccount['id']).remove();
			}
			$('#accounttable').DataTable().row.add($(content)).draw();
		}
	</script>
@endif

@if ($controlSwitch['expense-template'])
	<script>
		function refreshTableWithCharge(charge, is_new) {
			let content = populateHtmlTemplateWithData($("#expense-table-template").html().toString(), charge);
			if (!is_new && $('#chargetable').DataTable().row('#charge-' + charge['id']).length) {
				$('#chargetable').DataTable().row('#charge-' + charge['id']).remove();
			}
			$('#chargetable').DataTable().row.add($(content)).draw();
		}
	</script>
@endif

@if ($controlSwitch['loan-template'])
	<script>
		function refreshTableWithLoan(loan, is_new) {
			let content = populateHtmlTemplateWithData($("#loan-table-template").html().toString(), loan);
			if (!is_new && $('#loantable').DataTable().row('#loan-' + loan['id']).length) {
				$('#loantable').DataTable().row('#loan-' + loan['id']).remove();
			}
			$('#loantable').DataTable().row.add($(content)).draw();
		}
	</script>
@endif

@if ($controlSwitch['sales-process-modal'] || $controlSwitch['purchase-process-modal'])
	<script>
		function getProcessableOrder(type, template_name, modal_name) {
			$.ajax({
		    type: 'GET',
		    url: '/dashboard/processable/' + type + '/ajax',
		    data: {
		      },
		    dataType: 'html',
		    beforeSend: function(data) {
		      $('.ajax-processing').removeClass('hidden');
					$('div#' + modal_name + ' div.modal-body ul.list-unstyled').empty();
		    },
		  }).always(function (data) {
		    $('.ajax-processing').addClass('hidden');
			}).done(function (data) {
				let result = JSON.parse(data);
				if (result['success']) {
					for (index in result['data']) {
						let content = populateHtmlTemplateWithData($('#' + template_name).html().toString(), result['data'][index]);
						$('div#' + modal_name + ' div.modal-body ul.list-unstyled').append(content);
					}
				}
				$('div#' + modal_name).modal('show');
		  }).fail(function (data) {
		  });
		}
	</script>
@endif

@if ($controlSwitch['purchase-process-modal'])
	<script>
		function vuePurchaseProcessDataSource() {
			// function that holds global variables
		}

		$(document).ready(function() {
			// selection of supplying entities
			vuePurchaseProcessDataSource.selection_entity = {!! json_encode(\App\TaxableEntity::getPayableEntities('code', 'asc')->mapWithKeys(function ($item) { return [ $item->id => $item->code . '  (' . $item->name . ')' ]; })->toArray()) !!};
			// selection of payment terms
			vuePurchaseProcessDataSource.selection_payment = {!! json_encode(\App\PaymentTerm::orderBy('grace_days', 'asc')->pluck('symbol', 'id')->toArray()) !!};
			// selection of contact
			vuePurchaseProcessDataSource.selection_contact = {!! json_encode(\App\User::getUsersIndexedByEntity(['supplier'])) !!};
			// selection of staff
			vuePurchaseProcessDataSource.selection_staff = {!! json_encode(\App\User::getAllStaff('name', 'asc')->pluck('name', 'id')->toArray()) !!};
			// selection of currency
			vuePurchaseProcessDataSource.selection_currency = {!! json_encode(\App\Currency::orderBy('symbol', 'asc')->pluck('symbol', 'id')->toArray()) !!};
			// selection of product
			vuePurchaseProcessDataSource.selection_product = {!! json_encode(\App\UniqueTradable::getProducts('sku', 'asc')->pluck('sku', 'id')->toArray()) !!};
			// selection of warehouse
			vuePurchaseProcessDataSource.selection_warehouse = {!! json_encode(\App\Location::getWarehouses('name', 'asc')->toArray()) !!};
			// button of 'Process'
			vuePurchaseProcessDataSource.button_process = "<i class=\"fa fa-btn fa-floppy-o\"></i>" + "{{ trans('forms.Create') }}";
			// text of 'Create payable'
			vuePurchaseProcessDataSource.text_today = "{{ \App\Helpers\DateHelper::dbToGuiDate(date('Y-m-d')) }}";
			// text of 'Create payable'
			vuePurchaseProcessDataSource.text_process_purchase_order = "{{ trans('finance.Create payable') }}";
			// text of 'Create payable'
			vuePurchaseProcessDataSource.text_process_purchase_return = "{{ trans('finance.Create payable credit') }}";
			// callback function when new payable is created
			vuePurchaseProcessDataSource.insertCallback = function(data) {
				refreshTableWithTransactable(data, true);
			};
			// since there's no purchase-order table, callback function not installed
		});
	</script>
@endif

@if ($controlSwitch['sales-process-modal'])
	<script>
		function vueSalesProcessDataSource() {
			// function that holds global variables
		}

		$(document).ready(function() {
			// selection of supplying entities
			vueSalesProcessDataSource.selection_entity = {!! json_encode(\App\TaxableEntity::getReceivableEntities('code', 'asc')->mapWithKeys(function ($item) { return [ $item->id => $item->code . '  (' . $item->name . ')' ]; })->toArray()) !!};
			// selection of payment terms
			vueSalesProcessDataSource.selection_payment = {!! json_encode(\App\PaymentTerm::orderBy('grace_days', 'asc')->pluck('symbol', 'id')->toArray()) !!};
			// selection of contact
			vueSalesProcessDataSource.selection_contact = {!! json_encode(\App\User::getUsersIndexedByEntity(['customer', 'supplier', 'employee'])) !!};
			// selection of staff
			vueSalesProcessDataSource.selection_staff = {!! json_encode(\App\User::getAllStaff('name', 'asc')->pluck('name', 'id')->toArray()) !!};
			// selection of currency
			vueSalesProcessDataSource.selection_currency = {!! json_encode(\App\Currency::orderBy('symbol', 'asc')->pluck('symbol', 'id')->toArray()) !!};
			// selection of product
			vueSalesProcessDataSource.selection_product = {!! json_encode(\App\UniqueTradable::getProducts('sku', 'asc')->pluck('sku', 'id')->toArray()) !!};
			// selection of warehouse
			vueSalesProcessDataSource.selection_warehouse = {!! json_encode(\App\Location::getWarehouses('name', 'asc')->toArray()) !!};
			// button of 'Process'
			vueSalesProcessDataSource.button_process = "<i class=\"fa fa-btn fa-floppy-o\"></i>" + "{{ trans('forms.Create') }}";
			// text of 'Create payable'
			vueSalesProcessDataSource.text_today = "{{ \App\Helpers\DateHelper::dbToGuiDate(date('Y-m-d')) }}";
			// text of 'Create payable'
			vueSalesProcessDataSource.text_process_sales_order = "{{ trans('finance.Create receivable') }}";
			// text of 'Create payable'
			vueSalesProcessDataSource.text_process_sales_return = "{{ trans('finance.Create receivable credit') }}";
			// callback function when new receivable is created
			vueSalesProcessDataSource.insertCallback = function(data) {
				refreshTableWithTransactable(data, true);
			};
			// since there's no sales-order table, callback function is not installed
		});
	</script>
@endif

@if ($controlSwitch['transactable-modal'])
	<script>
		function vueTransactableDataSource() {
			// function that holds global variables
		}

		$(document).ready(function() {
			// selection of client entities
			vueTransactableDataSource.selection_receivable = {!! json_encode(\App\TaxableEntity::getReceivableEntities('code', 'asc')->mapWithKeys(function ($item) { return [ $item->id => $item->code . '  (' . $item->name . ')' ]; })->toArray()) !!};
			// selection of supplying entities
			vueTransactableDataSource.selection_payable = {!! json_encode(\App\TaxableEntity::getPayableEntities('code', 'asc')->mapWithKeys(function ($item) { return [ $item->id => $item->code . '  (' . $item->name . ')' ]; })->toArray()) !!};
			// selection of payment terms
			vueTransactableDataSource.selection_payment = {!! json_encode(\App\PaymentTerm::orderBy('grace_days', 'asc')->pluck('symbol', 'id')->toArray()) !!};
			// selection of contact
			vueTransactableDataSource.selection_contact = {!! json_encode(\App\User::getUsersIndexedByEntity(['supplier', 'customer'])) !!};
			// selection of staff
			vueTransactableDataSource.selection_staff = {!! json_encode(\App\User::getAllStaff('name', 'asc')->pluck('name', 'id')->toArray()) !!};
			// selection of currency
			vueTransactableDataSource.selection_currency = {!! json_encode(\App\Currency::orderBy('symbol', 'asc')->pluck('symbol', 'id')->toArray()) !!};
			// selection of product
			vueTransactableDataSource.selection_item = {!! json_encode(\App\UniqueTradable::orderBy('sku', 'asc')->get()->pluck('sku', 'id')->toArray()) !!};
			// selection of billing-address
			vueTransactableDataSource.selection_billing = {!! json_encode(\App\Address::getAddressesIndexedByEntity(['supplier','customer', 'employee'], 'billing')) !!};
			// selection of shipping-address
			vueTransactableDataSource.selection_shipping = {!! json_encode(\App\Address::getAddressesIndexedByEntity(['supplier','customer', 'employee'], 'shipping')) !!};
			// button of 'View'
			vueTransactableDataSource.button_view = "<i class=\"fa fa-btn fa-file-pdf-o\"></i>" + "{{ trans('forms.View PDF') }}";
			// button of 'Void'
			vueTransactableDataSource.button_void = "<i class=\"fa fa-btn fa-ban\"></i>" + "{{ trans('forms.Void') }}";
			// text of 'View receivable'
			vueTransactableDataSource.text_view_receivable = "{{ trans('finance.View receivable') }}";
			// text of 'View payable'
			vueTransactableDataSource.text_view_payable = "{{ trans('finance.View payable') }}";
			// text of 'View receivable'
			vueTransactableDataSource.text_void_receivable = "{{ trans('finance.Void receivable') }}";
			// text of 'View payable'
			vueTransactableDataSource.text_void_payable = "{{ trans('finance.Void payable') }}";
			// callback function when new order is submitted
			vueTransactableDataSource.insertCallback = function(data) {
				refreshTableWithTransactable(data, true);
			};
			// callback function when order is updated
			vueTransactableDataSource.updateCallback = function(data) {
				refreshTableWithTransactable(data, false);
			};
		});
	</script>
@endif

@if ($controlSwitch['taxable-entity-modal'])
	<script>
		function vueTaxableEntityDataSource() {
			// function that holds global variables
		}

		$(document).ready(function() {
			// text for button 'create'
			vueTaxableEntityDataSource.button_create = "<i class=\"fa fa-btn fa-floppy-o\"></i>" + "{{ trans('forms.Create') }}";
			// text for button 'update'
			vueTaxableEntityDataSource.button_update = "<i class=\"fa fa-btn fa-pencil-square-o\"></i>" + "{{ trans('forms.Update') }}";
			// selection of country location
			vueTaxableEntityDataSource.selection_country = {!! json_encode(\App\Helpers\CountryHelper::getAllCountryOptions()) !!};
			// selection of payment term
			vueTaxableEntityDataSource.selection_payment = {!! json_encode(\App\PaymentTerm::orderBy('grace_days', 'asc')->get()->mapWithKeys(function ($item) { return [ $item->id => [ 'symbol' => $item->symbol, 'description' => $item->description ]]; })->toArray()) !!};
			// selection of currency
			vueTaxableEntityDataSource.selection_currency =  {!! json_encode(\App\Currency::orderBy('symbol', 'asc')->get()->mapWithKeys(function ($item) { return [$item->id => [ 'symbol' => $item->symbol, 'description' => $item->description ]]; })->toArray()) !!};
			// text of 'Create supplier'
			vueTaxableEntityDataSource.text_create_supplier = "{{ trans('vrm.New supplier') }}";
			// text of 'Create customer'
			vueTaxableEntityDataSource.text_create_customer = "{{ trans('crm.New customer') }}";
			// text of 'Create employee'
			vueTaxableEntityDataSource.text_create_employee = "{{ trans('tool.Create new user') }}";
			// text of 'View supplier'
			vueTaxableEntityDataSource.text_view_supplier = "{{ trans('vrm.View supplier') }}";
			// text of 'View customer'
			vueTaxableEntityDataSource.text_view_customer = "{{ trans('crm.View customer') }}";
			// text of 'View employee'
			vueTaxableEntityDataSource.text_view_employee = "{{ trans('tool.Show user') }}";
			// text of 'Update supplier'
			vueTaxableEntityDataSource.text_update_supplier = "{{ trans('vrm.Update supplier') }}";
			// text of 'Update customer'
			vueTaxableEntityDataSource.text_update_customer = "{{ trans('crm.Update customer') }}";
			// text of 'Update employee'
			vueTaxableEntityDataSource.text_update_employee = "{{ trans('tool.Edit user') }}";
			// callback function when new entity is entered
			vueTaxableEntityDataSource.insertCallback = function(data) {
				refreshTableWithEntity(data, true);
			};
			// callback function when existing entity is updated
			vueTaxableEntityDataSource.updateCallback = function(data) {
				refreshTableWithEntity(data, false);
			};
		});
	</script>
@endif

@if ($controlSwitch['taccount-transaction-modal'])
	<script>
		function vueTaccountTransactionDataSource() {
			// function that holds global variables
		}

		$(document).ready(function() {
			// text for button 'create'
			vueTaccountTransactionDataSource.button_load_more_transaction = "{{ trans('forms.Load more transactions') }}";
		});
	</script>
@endif

@if ($controlSwitch['taccount-reconciliation-modal'])
	<script>
		function vueTaccountReconciliationDataSource() {
			// function that holds global variables
		}

		$(document).ready(function() {
			// text for button 'create'
			vueTaccountReconciliationDataSource.button_update = "<i class=\"fa fa-btn fa-pencil-square-o\"></i>" + "{{ trans('forms.Update') }}";
			// callback function when existing T-account is updated
			vueTaccountReconciliationDataSource.updateCallback = function(data) {
				refreshTableWithTaccount(data, false);
			};
		});
	</script>
@endif

@if ($controlSwitch['charge-entry-modal'])
	<script>
		function vueChargeDataSource() {
			// function that holds global variables
		}

		$(document).ready(function() {
			// boolean of OCR
			vueChargeDataSource.bool_ocr = "{{ \App\Helpers\ParameterHelper::getValue("charge_ocr") ?? false }}";
			// text of date of today
			vueChargeDataSource.text_today = "{{ \App\Helpers\DateHelper::dbToGuiDate(date("Y-m-d")) }}";
			// default taxable entity id
			vueChargeDataSource.id_default_entity = {{ auth()->user()->entity->id }};
			// current user id
			vueChargeDataSource.id_current_user = {{ auth()->user()->id }};
			// text of 'browse file'
			vueChargeDataSource.text_browse_file = "{{ trans('tool.Browse file') }}";
			// text of 'attachment download failed'
			vueChargeDataSource.text_attachment_download_failed = "{{ trans('messages.Attachment download failed') }}";
			// text of 'upload file'
			vueChargeDataSource.text_upload_file = "{{ trans('tool.Upload file') }}";
			// text of 'view file'
			vueChargeDataSource.text_view_file = "{{ trans('tool.View file') }}";
			// text of 'new charge'
			vueChargeDataSource.text_new_charge = "{{ trans('finance.New charge') }}";
			// text of 'view charge'
			vueChargeDataSource.text_view_charge = "{{ trans('finance.View charge') }}";
			// text of 'update charge'
			vueChargeDataSource.text_update_charge = "{{ trans('finance.Update charge') }}";
			// text of 'submit charge'
			vueChargeDataSource.text_submit_charge = "{{ trans('finance.Submit charge') }}";
			// text of 'retract charge'
			vueChargeDataSource.text_retract_charge = "{{ trans('finance.Retract charge') }}";
			// text of 'approve charge'
			vueChargeDataSource.text_approve_charge = "{{ trans('finance.Approve charge') }}";
			// button of 'New charge'
			vueChargeDataSource.button_create = "<i class=\"fa fa-btn fa-floppy-o\"></i>" + "{{ trans('forms.Create') }}";
			// button of 'Update charge'
			vueChargeDataSource.button_update = "<i class=\"fa fa-btn fa-pencil-square-o\"></i>" + "{{ trans('forms.Update') }}";
			// button of 'Submit charge'
			vueChargeDataSource.button_submit = "<i class=\"fa fa-btn fa-file-text\"></i>" + "{{ trans('forms.Submit') }}";
			// button of 'Retract charge'
			vueChargeDataSource.button_retract = "<i class=\"fa fa-btn fa-times\"></i>" + "{{ trans('forms.Retract') }}";
			// button of 'Approve charge'
			vueChargeDataSource.button_approve = "<i class=\"fa fa-btn fa-check-square-o\"></i>" + "{{ trans('forms.Approve') }}";
			// button of 'disapprove charge'
			vueChargeDataSource.button_reject = "<i class=\"fa fa-btn fa-thumbs-o-down\"></i>" + "{{ trans('forms.Disapprove') }}";
			// selection of entity
			vueChargeDataSource.selection_entity = {!! json_encode(\App\TaxableEntity::getActiveEntities('code', 'asc')->mapWithKeys(function ($item) { return [ $item->id => $item->code . '  (' . $item->name . ')' ]; })->toArray()) !!};
			// selection of staff
			vueChargeDataSource.selection_staff = {!! json_encode(\App\User::getActiveStaff('name', 'asc')->pluck('name', 'id')); !!};
			// selection of currency
			vueChargeDataSource.selection_currency = {!! json_encode(\App\Currency::getActiveCurrencies('symbol', 'asc')->mapWithKeys(function ($item) { return [ $item->id => $item->symbol . '  (' . $item->description . ')' ]; })->toArray()); !!};
			// selection of expenditure item
			vueChargeDataSource.selection_item = {!! json_encode(\App\UniqueTradable::getActiveExpenditures('sku', 'asc')->pluck('sku', 'id')) !!};
			// callback function after update
			vueChargeDataSource.updateCallback = function (charge) {
				refreshTableWithCharge(charge, false);
			};
			// callback function after insert
			vueChargeDataSource.insertCallback = function (charge) {
				refreshTableWithCharge(charge, true);
			};
		});
	</script>
@endif

@if ($controlSwitch['income-receipt-modal'])
	<script>
		function vueIncomeReceiptDataSource() {
			// function that holds global variables
		}

		$(document).ready(function() {
			// text to today
			vueIncomeReceiptDataSource.text_today = "{{ \App\Helpers\DateHelper::dbToGuiDate(date("Y-m-d")) }}";
			// text to modal title
			vueIncomeReceiptDataSource.text_title = "{{ trans('forms.Receive payment') }}";
			// text of 'must select an account' error messages
			vueIncomeReceiptDataSource.text_select_a_bank_account = "{{ trans('finance.Must select an account') }}";
			// text of 'must between ? and ?' error messages
			vueIncomeReceiptDataSource.text_not_greater_than_balance = "{{ trans('finance.Must not greater than balance') }}";
			// text of error messages
			vueIncomeReceiptDataSource.text_not_enough_credit = "{{ trans('finance.Not enough credit') }}";
			// button of "Update"
			vueIncomeReceiptDataSource.button_update = "<i class=\"fa fa-btn fa-pencil-square-o\"></i>" + "{{ trans('forms.Update') }}";
			// selection of bank account
			vueIncomeReceiptDataSource.selection_bank_account = {!! json_encode(\App\ChartAccount::find(unserialize(\App\Parameter::where('key', 'bank_cash_t_account_ids')->first()->value))->mapWithKeys(function ($item) { return [ $item->id => $item->description ]; })) !!};
			// callback function after update
			vueIncomeReceiptDataSource.updateCallback = function (data) {
				// update customer table
				refreshTableWithEntity(data['entity'], false);
				// update receivable table
				for (id in data['receivables']) {
					refreshTableWithTransactable(data['receivables'][id], false);
				}
			}
		});
	</script>
@endif

@if ($controlSwitch['payment-disbursement-modal'])
	<script>
		function vuePaymentExpenditureDataSource() {
			// function that holds global variables
		}

		$(document).ready(function() {
			// text to today
			vuePaymentExpenditureDataSource.text_today = "{{ \App\Helpers\DateHelper::dbToGuiDate(date("Y-m-d")) }}";
			// text to modal title
			vuePaymentExpenditureDataSource.text_title = "{{ trans('forms.Issue payment') }}";
			// text of 'must select an account' error messages
			vuePaymentExpenditureDataSource.text_select_a_bank_account = "{{ trans('finance.Must select an account') }}";
			// text of 'must between ? and ?' error messages
			vuePaymentExpenditureDataSource.text_not_greater_than_balance = "{{ trans('finance.Must not greater than balance') }}";
			// button of "Update"
			vuePaymentExpenditureDataSource.button_update = "<i class=\"fa fa-btn fa-pencil-square-o\"></i>" + "{{ trans('forms.Update') }}";
			// selection of bank account
			vuePaymentExpenditureDataSource.selection_bank_account = {!! json_encode(\App\ChartAccount::find(array_merge(unserialize(\App\Parameter::where('key', 'bank_cash_t_account_ids')->first()->value), unserialize(\App\Parameter::where('key', 'credit_card_t_account_ids')->first()->value)))->mapWithKeys(function ($item) { return [ $item->id => $item->description ]; })) !!};
			// callback function after update
			vuePaymentExpenditureDataSource.updateCallback = function (data) {
				// update customer table
				refreshTableWithEntity(data['entity'], false);
				// update receivable table
				for (id in data['payables']) {
					refreshTableWithTransactable(data['payables'][id], false);
				}
			}
		});
	</script>
@endif

@if ($controlSwitch['loan-modal'])
	<script>
		function vueLoanDataSource() {
			// function that holds global variables
		}

		$(document).ready(function() {
			// text of 'create loan'
			vueLoanDataSource.text_create_loan = "{{ trans('finance.New loan') }}";
			// text of 'view loan'
			vueLoanDataSource.text_view_loan = "{{ trans('finance.View loan') }}";
			// text of 'update loan'
			vueLoanDataSource.text_update_loan = "{{ trans('finance.Update loan') }}";
			// text of 'forgive loan'
			vueLoanDataSource.text_forgive_loan = "{{ trans('finance.Bad debt') }}";
			// text of 'forgive loan'
			vueLoanDataSource.text_today = "{{ \App\Helpers\DateHelper::dbToGuiDate(date("Y-m-d")) }}";
			// button of 'create'
			vueLoanDataSource.button_create = "<i class=\"fa fa-btn fa-floppy-o\"></i>" + "{{ trans('forms.Create') }}";
			// button of 'update'
			vueLoanDataSource.button_update = "<i class=\"fa fa-btn fa-pencil-square-o\"></i>" + "{{ trans('forms.Update') }}";
			// button of 'bad debt'
			vueLoanDataSource.button_baddebt = "<i class=\"fa fa-btn fa-bomb\"></i>" + "{{ trans('forms.Update') }}";
			// selection of currency
			vueLoanDataSource.selection_currency = {!! json_encode(\App\Currency::orderBy('symbol', 'asc')->get()->mapWithKeys(function ($item) { return [$item->id => [ 'symbol' => $item->symbol, 'description' => $item->description, 'currency_min' => $item->getFormat()['min'] ]]; })->toArray()) !!};
			// selection of loan entity
			vueLoanDataSource.selection_entity = {!! json_encode(\App\TaxableEntity::getActiveEntities('code', 'asc')->mapWithKeys(function ($item) { return [ $item->id => [ 'display' => $item->code . '  (' . $item->name . ')', 'currency' => $item->currency_id ]]; })->toArray()) !!};
			// selection of liquid account
			vueLoanDataSource.selection_cash_account = {!! json_encode(\App\ChartAccount::find(unserialize(\App\Parameter::where('key', 'bank_cash_t_account_ids')->first()->value))->mapWithKeys(function ($item) { return [ $item->id => $item->description ]; })) !!};
			// selection of expense account
			vueLoanDataSource.selection_expense_account = {!! \App\ChartAccount::where([ 'active' => 1 ])->where('type', 'expense')->orderBy('account')->get()->mapWithKeys(function ($item) { return [ $item->id => $item->account . ' ' . $item->description ]; }); !!};
			// selection of revenue account
			vueLoanDataSource.selection_revenue_account = {!! \App\ChartAccount::where([ 'active' => 1 ])->where('type', 'revenue')->orderBy('account')->get()->mapWithKeys(function ($item) { return [ $item->id => $item->account . ' ' . $item->description ]; }); !!};
			// callback function after update
			vueLoanDataSource.updateCallback = function (loan) {
				refreshTableWithLoan(loan, false);
			};
			// callback function after insert
			vueLoanDataSource.insertCallback = function (loan) {
				refreshTableWithLoan(loan, true);
			};
		});
	</script>
@endif

@if ($controlSwitch['transfer-cash-modal'])
	<script>
		function vueTransferCashDataSource() {
			// function that holds global variables
		}

		$(document).ready(function() {
			// selection of 'bank-account'
			vueTransferCashDataSource.selection_bank_account = {!! json_encode(\App\ChartAccount::find(unserialize(\App\Parameter::where('key', 'bank_cash_t_account_ids')->first()->value))->mapWithKeys(function ($item) { return [ $item->id => [ 'description' => $item->description, 'currency_id' => $item->currency_id ]]; })) !!};
			// selection of 'currency'
			vueTransferCashDataSource.selection_currency = {!! json_encode(\App\Currency::all()->mapWithKeys(function ($item) { return [ $item->id => [ 'min' => $item->getFormat(true)['min'] ]]; })) !!};
			// text of today
			vueTransferCashDataSource.text_today = "{{ \App\Helpers\DateHelper::dbToGuiDate(date("Y-m-d")) }}";
			// 'update' callback
			vueTransferCashDataSource.updateCallback = function(data) {
				for (index in data) {
					refreshTableWithTaccount(data[index], false);
				}
			};
		});
	</script>
@endif

@if ($controlSwitch['dividend-income-modal'])
	<script>
		function vueDividendIncomeDataSource() {
			// function that holds global variables
		}

		$(document).ready(function() {
			// selection of revenue
			vueDividendIncomeDataSource.selection_revenue = {!! json_encode(\App\ChartAccount::where('type', 'revenue')->get()->mapWithKeys(function ($item) { return [ $item->id => [ 'account' => $item->account, 'description' => $item->description ]]; })) !!};
			// selection of 'bank-account'
			vueDividendIncomeDataSource.selection_bank = {!! json_encode(\App\ChartAccount::find(unserialize(\App\Parameter::where('key', 'bank_cash_t_account_ids')->first()->value))->mapWithKeys(function ($item) { return [ $item->id => [ 'description' => $item->description, 'currency_id' => $item->currency_id ]]; })) !!};
			// selection of 'currency'
			vueDividendIncomeDataSource.selection_currency = {!! json_encode(\App\Currency::all()->mapWithKeys(function ($item) { return [ $item->id => [ 'min' => $item->getFormat(true)['min'] ]]; })) !!};
			// text of today
			vueDividendIncomeDataSource.text_today = "{{ \App\Helpers\DateHelper::dbToGuiDate(date("Y-m-d")) }}";
			// 'update' callback
			vueDividendIncomeDataSource.updateCallback = function(data) {
				refreshTableWithTaccount(data, false);
			};
		});
	</script>
@endif

@if ($controlSwitch['loan-interest-modal'])
	<script>
		function vueLoanInterestDataSource() {
			// function that holds global variables
		}

		$(document).ready(function() {
			// selection of revenue account
			vueLoanInterestDataSource.selection_revenue = {!! json_encode(\App\ChartAccount::where('type', 'revenue')->get()->mapWithKeys(function ($item) { return [ $item->id => [ 'account' => $item->account, 'description' => $item->description ]]; })) !!};
			// selection of expense account
			vueLoanInterestDataSource.selection_expense = {!! json_encode(\App\ChartAccount::where('type', 'expense')->get()->mapWithKeys(function ($item) { return [ $item->id => [ 'account' => $item->account, 'description' => $item->description ]]; })) !!};
			// selection of minimum increment of each loan
			vueLoanInterestDataSource.selection_currency_min = {!! json_encode(\App\LoanHeader::with('currency')->get()->mapWithKeys(function ($item) { return [ $item->id => $item->currency->getFormat(true)['min']]; })) !!};
			// text of today
			vueLoanInterestDataSource.text_today = "{{ \App\Helpers\DateHelper::dbToGuiDate(date("Y-m-d")) }}";
			// 'update' callback
			vueLoanInterestDataSource.updateCallback = function(data) {
				refreshTableWithLoan(data, false);
			};
		});
	</script>
@endif

@if ($controlSwitch['supplier-stats-modal'])
	<script>
		function vueSupplierStatsDataSource() {
			// function that holds global variables
		}

		$(document).ready(function() {
			// text
			vueSupplierStatsDataSource.text_runrate = "{{ trans('finance.Runrate') }}";
			vueSupplierStatsDataSource.text_month = "{{ trans('tool.month') }}";
			vueSupplierStatsDataSource.text_volume = "{{ trans('finance.Volume') }}";
			vueSupplierStatsDataSource.text_chart_error = "{{ trans('crm.Performance statistics cannot be generated') }}";
		});
	</script>
@endif

@if ($controlSwitch['customer-stats-modal'])
	<script>
		function vueCustomerStatsDataSource() {
			// function that holds global variables
		}

		$(document).ready(function() {
			// text
			vueCustomerStatsDataSource.text_performance = "{{ trans('finance.Performance') }}";
			vueCustomerStatsDataSource.text_month = "{{ trans('tool.month') }}";
			vueCustomerStatsDataSource.text_amount = "{{ trans('finance.Amount') }}";
			vueCustomerStatsDataSource.text_runrate = "{{ trans('finance.Runrate') }}";
			vueCustomerStatsDataSource.text_volume = "{{ trans('finance.Volume') }}";
			vueCustomerStatsDataSource.text_chart_error = "{{ trans('crm.Performance statistics cannot be generated') }}";
		});
	</script>
@endif

@if ($controlSwitch['transactable-modal'])
	<script type="text/javascript" src="{{ asset('js/embedded_modal/transactable_form.js') }}"></script>
@endif

@if ($controlSwitch['purchase-process-modal'])
	<script type="text/javascript" src="{{ asset('js/embedded_modal/purchase_process.js') }}"></script>
@endif

@if ($controlSwitch['sales-process-modal'])
	<script type="text/javascript" src="{{ asset('js/embedded_modal/sales_process.js') }}"></script>
@endif

@if ($controlSwitch['taxable-entity-modal'])
	<script type="text/javascript" src="{{ asset('js/embedded_modal/taxable_entity.js') }}"></script>
@endif

@if ($controlSwitch['taccount-transaction-modal'])
	<script type="text/javascript" src="{{ asset('js/embedded_modal/taccount_transaction.js') }}"></script>
@endif

@if ($controlSwitch['taccount-reconciliation-modal'])
	<script type="text/javascript" src="{{ asset('js/embedded_modal/taccount_reconciliation.js') }}"></script>
@endif

@if ($controlSwitch['charge-entry-modal'])
	<script type="text/javascript" src="{{ asset('js/embedded_modal/charge_entry.js') }}"></script>
@endif

@if ($controlSwitch['charge-entry-modal'])
	<script type="text/javascript" src="{{ asset('js/embedded_modal/recurring_charge_entry.js') }}"></script>
@endif

@if ($controlSwitch['income-receipt-modal'])
	<script type="text/javascript" src="{{ asset('js/embedded_modal/income_form.js') }}"></script>
@endif

@if ($controlSwitch['payment-disbursement-modal'])
	<script type="text/javascript" src="{{ asset('js/embedded_modal/payment_form.js') }}"></script>
@endif

@if ($controlSwitch['loan-modal'])
	<script type="text/javascript" src="{{ asset('js/embedded_modal/loan_form.js') }}"></script>
@endif

@if ($controlSwitch['transfer-cash-modal'])
	<script type="text/javascript" src="{{ asset('js/embedded_modal/transfer_cash.js') }}"></script>
@endif

@if ($controlSwitch['dividend-income-modal'])
	<script type="text/javascript" src="{{ asset('js/embedded_modal/dividend_income.js') }}"></script>
@endif

@if ($controlSwitch['loan-interest-modal'])
	<script type="text/javascript" src="{{ asset('js/embedded_modal/loan_interest.js') }}"></script>
@endif

@if ($controlSwitch['supplier-stats-modal'])
	<script type="text/javascript" src="{{ asset('js/embedded_modal/supplier_stats.js') }}"></script>
@endif

@if ($controlSwitch['customer-stats-modal'])
	<script type="text/javascript" src="{{ asset('js/embedded_modal/customer_stats.js') }}"></script>
@endif

@endsection
